- name: Create necessary media directory tv
  ansible.builtin.file:
    path: "/home/{{ host_user }}/plex/data/media/tv"
    mode: '0777'
    state: directory

- name: Create necessary media directory movies
  ansible.builtin.file:
    path: "/home/{{ host_user }}/plex/data/media/movies"
    mode: '0777'
    state: directory

- name: Start watchtower docker container
  community.docker.docker_container:
    name: watchtower
    image: containrrr/watchtower:latest
    env:
      TZ: Europe/Amsterdam
      PUID: '1000'
      PGID: '1000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart_policy: "always"
    state: started

- name: Start Plex Docker container
  community.docker.docker_container:
    name: plex 
    image: ghcr.io/hotio/plex
    env:
      TZ: Europe/Amsterdam
      PUID: '1000'
      PGID: '1000'
      umask: '002'
    volumes:
      - "/home/{{ host_user }}/config/plex:/config"
      - "/home/{{ host_user }}/plex/data/media/tv:/tv"
      - "/home/{{ host_user }}/plex/data/media/movies:/movies" 
    restart_policy: "unless-stopped"
    state: started
    ports:
      - 32400:32400

- name: Start sonarr docker container
  community.docker.docker_container:
    name: sonarr 
    image: lscr.io/linuxserver/sonarr:latest
    env:
      TZ: Europe/Amsterdam
      PUID: '1000'
      PGID: '1000'
      UMASK: '002'
    volumes:
      - ~/config/sonarr:/config
      - ~/plex/data:/data
    ports:
      - 8989:8989 
    restart_policy: "always"
    state: started

- name: Start radarr docker container
  community.docker.docker_container:
    name: radarr 
    image: lscr.io/linuxserver/radarr:latest
    env:
      TZ: Europe/Amsterdam
      PUID: '1000'
      PGID: '1000'
    volumes:
      - ~/config/radarr:/config
      - ~/plex/data:/data
    ports:
      - 7878:7878
    restart_policy: "always"
    state: started

- name: start overseerr docker container
  community.docker.docker_container:
    name: overseerr 
    image: sctx/overseerr
    env:
      TZ: Europe/Amstedam
    volumes:
      - ~/config/overseerr:/app/config
    ports:
      - 5055:5055
    restart_policy: "always"
    state: started

- name: Start prowlarr docker container
  community.docker.docker_container:
    name: prowlarr 
    image: lscr.io/linuxserver/prowlarr:latest
    env:
      TZ: Europe/Amsterdam
      PUID: '1000'
      PGID: '1000'
    volumes:
      - ~/config/prowlarr:/config
    ports:
      - 9696:9696 
    restart_policy: "unless-stopped"
    state: started
