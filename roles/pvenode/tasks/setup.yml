- name: Install necessary packages
  ansible.builtin.apt:
    name:
      - sudo
      - python3-proxmoxer
      - python3-pip
      - jq
    update_cache: false

- name: Create user {{ pvenode.user }}
  ansible.builtin.user:
    name: "{{ pvenode.user }}"
    shell: '/bin/bash'

- name: Add Ansible ssh key
  ansible.builtin.authorized_key:
    user: "{{ pvenode.user }}"
    key: "{{ lookup('file', '/home/{{ pvenode.user }}/.ssh/id_rsa.pub') }}" 

- name: Add {{ pvenode.user }} to sudo
  ansible.builtin.user:
    name: "{{ pvenode.user }}"
    groups: sudo
    append: true
    state: present
    createhome: true

- name: Make sudo without password for {{ pvenode.user }}
  ansible.builtin.copy:
    dest: /etc/sudoers.d/80-ansible-sudo-user
    content: "{{ pvenode.user }} ALL=(ALL) NOPASSWD:ALL"
    mode: 0440

- name: Retrieve registered users in Proxmox API
  ansible.builtin.command: >
    pvesh ls /access/users --output-format=json
  register: pve_user_output

- name: Set result in fact
  ansible.builtin.set_fact:
    pve_existing_users: "{{ pve_user_output.stdout | from_json | map(attribute='name') }}"
    pve_desired_user: "{{ pvenode.user }}@pam"

- name: Add user to Proxmox API
  ansible.builtin.command: >
    "pvesh create /access/users --userid {{ pvenode.user }}@pam"
  when: pve_desired_user not in pve_existing_users

- name: Add api token for user
  ansible.builtin.command: >
    "pvesh create /access/users/{{ pvenode.user }}@pam/token/temp --output-format=json"
  when: pve_desired_user not in pve_existing_users
  
# pvesh ls /access/users --output-format=json | jq '.[].name'
# pvesh create /access/users/gijs@pam/token/test2 -privsep 0 --output-format=json